
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.HostScalarFieldEnum = {
  id: 'id',
  name: 'name',
  labels: 'labels',
  createdAt: 'createdAt'
};

exports.Prisma.FlowScalarFieldEnum = {
  id: 'id',
  hostId: 'hostId',
  fiveTuple: 'fiveTuple',
  sni: 'sni',
  ja3: 'ja3',
  tsStart: 'tsStart',
  tsEnd: 'tsEnd',
  bytesIn: 'bytesIn',
  bytesOut: 'bytesOut'
};

exports.Prisma.FeatureScalarFieldEnum = {
  flowId: 'flowId',
  v: 'v'
};

exports.Prisma.ScoreScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  model: 'model',
  score: 'score',
  version: 'version',
  createdAt: 'createdAt'
};

exports.Prisma.AlertScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  severity: 'severity',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.RuleScalarFieldEnum = {
  id: 'id',
  vendor: 'vendor',
  sid: 'sid',
  name: 'name',
  body: 'body',
  enabled: 'enabled',
  tags: 'tags',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  hostId: 'hostId',
  kind: 'kind',
  payload: 'payload',
  ts: 'ts'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Host: 'Host',
  Flow: 'Flow',
  Feature: 'Feature',
  Score: 'Score',
  Alert: 'Alert',
  Rule: 'Rule',
  Event: 'Event'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/compimarquez/ProyectoFinal_Backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/compimarquez/ProyectoFinal_Backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// prisma/schema.prisma\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Host {\n  id        String   @id @default(cuid())\n  name      String\n  labels    Json?\n  createdAt DateTime @default(now())\n  events    Event[]\n  flows     Flow[]\n}\n\nmodel Flow {\n  id        String    @id @default(cuid())\n  hostId    String\n  fiveTuple String\n  sni       String?\n  ja3       String?\n  tsStart   DateTime\n  tsEnd     DateTime?\n  bytesIn   Int       @default(0)\n  bytesOut  Int       @default(0)\n  features  Feature?\n  scores    Score[]\n  alerts    Alert[]\n  Host      Host      @relation(fields: [hostId], references: [id])\n\n  @@index([hostId, tsStart])\n  @@index([sni])\n  @@index([ja3])\n}\n\nmodel Feature {\n  flowId String @id\n  v      Json\n  Flow   Flow   @relation(fields: [flowId], references: [id])\n}\n\nmodel Score {\n  id        String   @id @default(cuid())\n  flowId    String\n  model     String\n  score     Float\n  version   String   @default(\"1\")\n  createdAt DateTime @default(now())\n  Flow      Flow     @relation(fields: [flowId], references: [id])\n\n  @@index([flowId, createdAt])\n}\n\nmodel Alert {\n  id        String   @id @default(cuid())\n  flowId    String\n  severity  String // low|med|high\n  reason    Json // {rule_hits:[], indicators:[], ...}\n  createdAt DateTime @default(now())\n  Flow      Flow     @relation(fields: [flowId], references: [id])\n\n  @@index([createdAt])\n}\n\nmodel Rule {\n  id        String   @id @default(cuid())\n  vendor    String // suricata|snort\n  sid       Int\n  name      String\n  body      String\n  enabled   Boolean  @default(true)\n  tags      String[]\n  createdAt DateTime @default(now())\n}\n\nmodel Event {\n  id      String   @id @default(cuid())\n  hostId  String\n  kind    String // eve|zeek|host-metrics\n  payload Json\n  ts      DateTime @default(now())\n  Host    Host     @relation(fields: [hostId], references: [id])\n\n  @@index([hostId, ts])\n}\n",
  "inlineSchemaHash": "79c2644e015bf7da9ee52c03b36e3a343da66c2ff6c2c84f0bf76710f6d37846",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Host\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"labels\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToHost\"},{\"name\":\"flows\",\"kind\":\"object\",\"type\":\"Flow\",\"relationName\":\"FlowToHost\"}],\"dbName\":null},\"Flow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hostId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fiveTuple\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ja3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tsStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tsEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bytesIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bytesOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"features\",\"kind\":\"object\",\"type\":\"Feature\",\"relationName\":\"FeatureToFlow\"},{\"name\":\"scores\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"FlowToScore\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToFlow\"},{\"name\":\"Host\",\"kind\":\"object\",\"type\":\"Host\",\"relationName\":\"FlowToHost\"}],\"dbName\":null},\"Feature\":{\"fields\":[{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"v\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"Flow\",\"kind\":\"object\",\"type\":\"Flow\",\"relationName\":\"FeatureToFlow\"}],\"dbName\":null},\"Score\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Flow\",\"kind\":\"object\",\"type\":\"Flow\",\"relationName\":\"FlowToScore\"}],\"dbName\":null},\"Alert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Flow\",\"kind\":\"object\",\"type\":\"Flow\",\"relationName\":\"AlertToFlow\"}],\"dbName\":null},\"Rule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hostId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Host\",\"kind\":\"object\",\"type\":\"Host\",\"relationName\":\"EventToHost\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

